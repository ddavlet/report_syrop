services:
  db:
    image: postgres:15
    container_name: report_syrop_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: report_syrop_app:latest
    container_name: report_syrop_app
    working_dir: /app
    volumes:
      - ./:/app
      - ./out:/app/out
    environment:
      # core app config
      PG_DSN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # optional: telegram bot config
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      BOT_ALLOWED_USER_IDS: ${BOT_ALLOWED_USER_IDS}
      SALES_JSON_PATH: ${SALES_JSON_PATH}
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "-m", "src.bot"]

  data_loader:
    build:
      context: .
      dockerfile: Dockerfile
    image: report_syrop_data_loader:latest
    container_name: report_syrop_data_loader
    working_dir: /app
    volumes:
      - ./:/app
      - ./data:/app/data
    ports:
      - "5500:8000"
    environment:
      # core app config
      PG_DSN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # PG_TABLE: sales
      PYTHONPATH: /app
    depends_on:
      db:
        condition: service_healthy
    command: ["python", "-m", "src.data_loader_service"]

  adminer:
    image: adminer:latest
    container_name: report_syrop_adminer
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_started

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    environment:
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      # - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_RUNNERS_ENABLED=true
      - NODE_ENV=production
      # - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - WEBHOOK_URL=localhost:5678/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${GENERIC_TIMEZONE}
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB_N8N}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - N8N_PROXY_HOPS=1
    volumes:
      - n8n_data:/home/node/.n8n

volumes:
  pg_data:
  n8n_data:
